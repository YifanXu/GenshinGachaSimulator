{"version":3,"sources":["SideNav.js","RSTable.js","AggregateTable.js","banners/Banner.js","banners/CBanners.js","banners/SBanner.js","banners/WBanner.js","pages/Home.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["SideNav","props","itemLinks","Object","entries","items","item","itemLink","push","key","className","href","id","RSTable","columns","body","data","map","dataRow","index","scope","total","column","style","highlight","undefined","AggregateTable","rarity","dataSection","color","pullColors","fontWeight","concat","name","quantity","sort","a","b","tableRows","entry","Banner","this","pity5","pity4","catalog","banners","softPityArr","CBanner","banner","guarantee5","guarantee4","bannerInfo","rc","startingPity4","startingPity5","Math","random","rollRarity","rewardList","weapon3","promo4","character4","weapon4","promo5","character5","sc","reward","floor","length","round","SBanner","weapon5","softPityArr4","epCount","ep","Home","state","dropdownOpen","epDropOpen","epitomeValue","activeType","activeBanner","bannerObject","displayedPulls","aggregate","statBlock","originalReducer","reducer","Total5","Total4","WBanner","Error","setState","repeats","newList","newAggregate","assign","newStats","i","newPull","roll","toPercent","n","block","ButtonDropdown","isOpen","toggle","e","DropdownToggle","caret","fullName","DropdownMenu","DropdownItem","onClick","resetBanner","header","keys","character","bannerName","weapon","Button","bind","pull","disabled","promoItem","setEpitome","colorPull","calcStatBlock","React","Component","sideNavItems","App","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae60d837.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SideNav.css'\r\n\r\nconst SideNav = (props) => {\r\n  let itemLinks = [];\r\n  for (let [item, itemLink] of Object.entries(props.items)) {\r\n    itemLinks.push(\r\n      <div key={item} className=\"sideNavItem\">\r\n        <a href={itemLink}>{item}</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"sideNav\">{itemLinks}</div>\r\n  )\r\n}\r\n\r\nexport default SideNav","import React from 'react'\r\nimport './RSTable.css'\r\n\r\nconst RSTable = props => {\r\n  const columns = props.columns\r\n  const body = props.data.map((dataRow, index) => (\r\n    <tr key={index}>\r\n      <th scope=\"row\">{dataRow.total || index}</th>\r\n      {columns.map(column => <td key={column} style={props.highlight ? props.highlight(dataRow, column) : {}}>{dataRow[column] === undefined ? \"\" : dataRow[column]}</td>)}\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <td>#</td>\r\n          {columns.map(column => <td key={column}>{column}</td>)}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {body}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default RSTable","import React from 'react'\r\nimport './RSTable.css'\r\n\r\nconst AggregateTable = props => {\r\n  let entries = []\r\n  for (const [rarity, dataSection] of Object.entries(props.data)) {\r\n    const style = {\r\n      color: props.pullColors[rarity] || '#000000',\r\n      fontWeight: 'light'\r\n    }\r\n    entries = entries.concat(Object.entries(dataSection).map(([name, quantity]) => (\r\n      {\r\n        style,\r\n        rarity,\r\n        name: name,\r\n        quantity: quantity,\r\n      }\r\n    )))\r\n  }\r\n\r\n  entries.sort((a,b) => {\r\n    if(a.rarity !== b.rarity) return b.rarity - a.rarity\r\n    else return b.quantity - a.quantity\r\n  })\r\n\r\n  const tableRows = entries.map(entry => (\r\n    <tr key={entry.name}>\r\n      <td style={entry.style}>{entry.rarity}</td>\r\n      <td style={entry.style}>{entry.name}</td>\r\n      <td style={entry.style}>{entry.quantity}</td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <td>Rarity</td>\r\n          <td>Name</td>\r\n          <td>Quantity</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableRows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default AggregateTable","import catalog from '../data/catalog.json'\r\nimport banners from '../data/banners.json'\r\n\r\nexport default class Banner {\r\n    constructor() {\r\n        this.pity5 = 0\r\n        this.pity4 = 0\r\n        this.total = 0\r\n        this.catalog = catalog\r\n        this.banners = banners\r\n    }\r\n}","import Banner from './Banner'\r\n\r\nconst rate5 = 0.006\r\nconst rate4 = 0.05\r\nconst rate4Soft = 0.3682\r\nconst softPityStart = 73;\r\nconst softPityArr = [\r\n  0.0655,\r\n  0.1245,\r\n  0.1821,\r\n  0.2437,\r\n  0.3029,\r\n  0.3624,\r\n  0.4197,\r\n  0.4879,\r\n  0.5346,\r\n  0.5888,\r\n  0.6505,\r\n  0.6916,\r\n  0.6787,\r\n  0.5714,\r\n  0.4524,\r\n  0.4783,\r\n  1\r\n]\r\n\r\nclass CBanner extends Banner {\r\n  constructor(banner) {\r\n    super()\r\n    this.guarantee5 = false\r\n    this.guarantee4 = false\r\n    this.bannerInfo = banner\r\n  }\r\n\r\n  rollRarity(rc) {\r\n    // Prevent hitting pity4 and pity 5 at the same time\r\n    if ((this.pity4 === 8 && this.pity5 === 88) || this.pity4 >= 9 || (this.pity4 === 8 && rc <= rate4Soft) || rc <= rate4) {\r\n      this.pity4 = 0\r\n      this.pity5++;\r\n      return 4\r\n    }\r\n    if ((this.pity5 >= softPityStart && rc >= 1 - softPityArr[this.pity5 - softPityStart]) || rc >= 1 - rate5) {\r\n      this.pity4++;\r\n      this.pity5 = 0\r\n      return 5\r\n    }\r\n    this.pity4++;\r\n    this.pity5++;\r\n    return 3\r\n  }\r\n\r\n  roll() {\r\n    const startingPity4 = this.pity4;\r\n    const startingPity5 = this.pity5;\r\n    const rc = Math.random()\r\n    const rarity = this.rollRarity(rc)\r\n\r\n    let rewardList = []\r\n    switch (rarity) {\r\n      case 3:\r\n        rewardList = this.catalog.weapon3\r\n        break;\r\n      case 4:\r\n        if (this.guarantee4 || Math.random() > 0.5) {\r\n          // Get promotional\r\n          rewardList = this.bannerInfo.promo4\r\n          this.guarantee4 = false\r\n        }\r\n        else {\r\n          // 50/50 Character or banner\r\n          this.guarantee4 = true\r\n          if (Math.random() > 0.5) {\r\n            rewardList = this.catalog.character4\r\n          }\r\n          else {\r\n            rewardList = this.catalog.weapon4\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n        if (this.guarantee5 || Math.random() > 0.5) {\r\n          this.guarantee5 = false\r\n          rewardList = this.bannerInfo.promo5\r\n        }\r\n        else {\r\n          this.guarantee5 = true\r\n          rewardList = this.catalog.character5\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Randomly pick from reward list\r\n    const sc = Math.random()\r\n\r\n    const scIndex = Math.floor(sc * rewardList.length)\r\n    const reward = rewardList[scIndex]\r\n\r\n    this.total++;\r\n    return {\r\n      ...reward,\r\n      rc: Math.round(rc * 10000) / 10000,\r\n      sc: Math.round(sc * 10000) / 10000,\r\n      rarity,\r\n      pity4: startingPity4 + 1,\r\n      pity5: startingPity5 + 1,\r\n      total: this.total\r\n    }\r\n  }\r\n}\r\n\r\nexport default CBanner\r\n","import Banner from './Banner'\r\n\r\nconst rate5 = 0.006\r\nconst rate4 = 0.05\r\nconst rate4Soft = 0.3682\r\nconst softPityStart = 73;\r\nconst softPityArr = [\r\n  0.0737,\r\n  0.1309,\r\n  0.1902,\r\n  0.2506,\r\n  0.3081,\r\n  0.3685,\r\n  0.4290,\r\n  0.4837,\r\n  0.5438,\r\n  0.5924,\r\n  0.6432,\r\n  0.6806,\r\n  0.6722,\r\n  0.5473,\r\n  0.5299,\r\n  0.4762,\r\n  1\r\n]\r\n\r\nclass SBanner extends Banner {\r\n  constructor() {\r\n    super()\r\n    this.guarantee5 = 0\r\n    this.guarantee4 = 0\r\n  }\r\n\r\n  rollRarity(rc) {\r\n    // Prevent hitting pity4 and pity 5 at the same time\r\n    if ((this.pity4 === 8 && this.pity5 === 88) || this.pity4 >= 9 || (this.pity4 === 8 && rc <= rate4Soft) || rc <= rate4) {\r\n      this.pity4 = 0\r\n      this.pity5++;\r\n      return 4\r\n    }\r\n    if ((this.pity5 >= softPityStart && rc >= 1 - softPityArr[this.pity5 - softPityStart]) || rc >= 1 - rate5) {\r\n      this.pity4++;\r\n      this.pity5 = 0\r\n      return 5\r\n    }\r\n    this.pity4++;\r\n    this.pity5++;\r\n    return 3\r\n  }\r\n\r\n  roll() {\r\n    const startingPity4 = this.pity4;\r\n    const startingPity5 = this.pity5;\r\n    const rc = Math.random()\r\n    const rarity = this.rollRarity(rc)\r\n\r\n    let rewardList = []\r\n    switch (rarity) {\r\n      case 3:\r\n        rewardList = this.catalog.weapon3\r\n        break;\r\n      case 4:\r\n        // 50/50 Character or banner\r\n        if (this.guarantee4 >= 2 || (this.guarantee4 > -2 && Math.random() > 0.5)) {\r\n          this.guarantee4 = this.guarantee4 > 0 ? -1 : this.guarantee4 - 1\r\n          rewardList = this.catalog.character4\r\n        }\r\n        else {\r\n          this.guarantee4 = this.guarantee4 < 0 ? 1 : this.guarantee4 + 1\r\n          rewardList = this.catalog.weapon4\r\n        }\r\n        break;\r\n      case 5:\r\n        if (this.guarantee5 >= 2 || (this.guarantee5 > -2 && Math.random() > 0.5)) {\r\n          this.guarantee5 = this.guarantee5 > 0 ? -1 : this.guarantee5 - 1\r\n          rewardList = this.catalog.character5\r\n        }\r\n        else {\r\n          this.guarantee5 = this.guarantee5 < 0 ? 1 : this.guarantee5 + 1\r\n          rewardList = this.catalog.weapon5\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Randomly pick from reward list\r\n    const sc = Math.random()\r\n\r\n    const scIndex = Math.floor(sc * rewardList.length)\r\n    const reward = rewardList[scIndex]\r\n\r\n    this.total++;\r\n    return {\r\n      ...reward,\r\n      rc: Math.round(rc * 10000) / 10000,\r\n      sc: Math.round(sc * 10000) / 10000,\r\n      rarity,\r\n      pity4: startingPity4 + 1,\r\n      pity5: startingPity5 + 1,\r\n      total: this.total\r\n    }\r\n  }\r\n}\r\n\r\nexport default SBanner\r\n","import Banner from './Banner'\r\n\r\nconst rate5 = 0.007\r\nconst rate4 = 0.05\r\nconst softPityStart4 = 7\r\nconst softPityArr4 = [\r\n  0.4237,\r\n  0.2138,\r\n  1\r\n]\r\nconst softPityStart = 62\r\nconst softPityArr = [\r\n  0.0820,\r\n  0.1496,\r\n  0.2172,\r\n  0.2917,\r\n  0.3627,\r\n  0.4255,\r\n  0.4974,\r\n  0.5734,\r\n  0.6378,\r\n  0.7100,\r\n  0.7308,\r\n  0.6190,\r\n  0.5417,\r\n  0.5455,\r\n  0.5123,\r\n  0.0400,\r\n  0.6677,\r\n  1\r\n]\r\n\r\nclass CBanner extends Banner {\r\n  constructor(banner) {\r\n    super()\r\n    this.guarantee5 = false\r\n    this.guarantee4 = false\r\n    this.bannerInfo = banner\r\n    this.epCount = 0\r\n  }\r\n\r\n  rollRarity(rc) {\r\n    if ((this.pity5 >= softPityStart && rc >= 1 - softPityArr[this.pity5 - softPityStart]) || rc >= 1 - rate5) {\r\n      this.pity4++;\r\n      this.pity5 = 0\r\n      return 5\r\n    }\r\n    if (this.pity4 - softPityStart4 >= softPityArr4.length || (this.pity4 >= softPityStart4 && rc <= softPityArr4[this.pity4 - softPityStart4]) || rc <= rate4) {\r\n      this.pity4 = 0\r\n      this.pity5++;\r\n      return 4\r\n    }\r\n    this.pity4++;\r\n    this.pity5++;\r\n    return 3\r\n  }\r\n\r\n  roll(ep) {\r\n    const startingPity4 = this.pity4;\r\n    const startingPity5 = this.pity5;\r\n    const rc = Math.random()\r\n    const rarity = this.rollRarity(rc)\r\n\r\n    let rewardList = []\r\n    switch (rarity) {\r\n      case 3:\r\n        rewardList = this.catalog.weapon3\r\n        break;\r\n      case 4:\r\n        if (this.guarantee4 || Math.random() > 0.25) {\r\n          // Get promotional\r\n          rewardList = this.bannerInfo.promo4\r\n          this.guarantee4 = false\r\n        }\r\n        else {\r\n          // 50/50 Character or banner\r\n          this.guarantee4 = true\r\n          if (Math.random() > 0.5) {\r\n            rewardList = this.catalog.character4\r\n          }\r\n          else {\r\n            rewardList = this.catalog.weapon4\r\n          }\r\n        }\r\n        break;\r\n      case 5:\r\n        if (this.guarantee5 || this.epCount >= 2 || Math.random() > 0.25) {\r\n          this.guarantee5 = false\r\n          rewardList = this.bannerInfo.promo5\r\n        }\r\n        else {\r\n          this.guarantee5 = true\r\n          rewardList = this.catalog.weapon5\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Randomly pick from reward list\r\n    const sc = Math.random()\r\n\r\n    const scIndex = Math.floor(sc * rewardList.length)\r\n    let reward = rewardList[scIndex]\r\n\r\n    // Force Epitomized Path Item\r\n    if(rarity === 5) {\r\n      if (this.epCount >= 2 && reward.name !== ep) {\r\n        for (const item of rewardList) {\r\n          if(item.name === ep) {\r\n            reward = item\r\n            break\r\n          }\r\n        }\r\n        this.epCount = 0\r\n      }\r\n      else {\r\n        if(reward.name === ep) {\r\n          this.epCount = 0\r\n        }\r\n        else if (ep) {\r\n          this.epCount++\r\n        }\r\n      }\r\n    }\r\n\r\n    this.total++;\r\n    return {\r\n      ...reward,\r\n      rc: Math.round(rc * 10000) / 10000,\r\n      sc: Math.round(sc * 10000) / 10000,\r\n      rarity,\r\n      pity4: startingPity4 + 1,\r\n      pity5: startingPity5 + 1,\r\n      total: this.total\r\n    }\r\n  }\r\n}\r\n\r\nexport default CBanner\r\n","import React from 'react'\r\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport banners from '../data/banners.json'\r\nimport RSTable from '../RSTable'\r\nimport AggregateTable from '../AggregateTable';\r\nimport CBanner from '../banners/CBanners'\r\nimport SBanner from '../banners/SBanner'\r\nimport WBanner from '../banners/WBanner'\r\nimport './Home.css'\r\n\r\nconst pullColors = {\r\n  3: '#14aec9',\r\n  4: '#bf0ecf',\r\n  5: '#c79b18'\r\n}\r\n\r\nconst colorPull = (pull, column) => {\r\n  let style = {}\r\n  if(pullColors[pull.rarity]) style.color = pullColors[pull.rarity]\r\n  style.fontWeight = column === 'name' ? \"bold\" : \"light\"\r\n  return style\r\n}\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      epDropOpen: false,\r\n      epitomeValue: \"\",\r\n      activeType: '',\r\n      activeBanner: null,\r\n      bannerObject: null,\r\n      displayedPulls: [],\r\n      aggregate: {},\r\n      statBlock: {}\r\n    }\r\n  }\r\n\r\n  resetBanner(originalReducer) {\r\n    let reducer = {\r\n      ...originalReducer,\r\n      aggregate: {\r\n        5: {},\r\n        4: {},\r\n        3: {}\r\n      },\r\n      statBlock: {\r\n        5: 0,\r\n        4: 0,\r\n        3: 0,\r\n        Total5: 0,\r\n        Total4: 0\r\n      },\r\n      displayedPulls: [],\r\n      epitomeValue: \"\",\r\n    }\r\n    switch(originalReducer.activeType || this.state.activeType) {\r\n      case 's':\r\n        reducer.bannerObject = new SBanner()\r\n        break\r\n      case 'w':\r\n        reducer.bannerObject = new WBanner(reducer.activeBanner || this.state.activeBanner)\r\n        break\r\n      case 'c':\r\n        reducer.bannerObject = new CBanner(reducer.activeBanner || this.state.activeBanner)\r\n        break\r\n      default:\r\n        throw new Error('Invalid Banner Type')\r\n    }\r\n\r\n    this.setState(reducer)\r\n  }\r\n\r\n  pull(repeats = 10) {\r\n    if(!this.state.bannerObject) return\r\n    let newList = []\r\n    let newAggregate = Object.assign({}, this.state.aggregate)\r\n    let newStats = Object.assign({}, this.state.statBlock)\r\n    for(let i = 0; i < repeats; i++) {\r\n      const newPull = this.state.bannerObject.roll(this.state.epitomeValue)\r\n\r\n      // Update Aggregate Table\r\n      if(newAggregate[newPull.rarity][newPull.name]) {\r\n        newAggregate[newPull.rarity][newPull.name]++\r\n      }\r\n      else {\r\n        newAggregate[newPull.rarity][newPull.name] = 1\r\n      }\r\n\r\n      // Update Stats\r\n      newStats[newPull.rarity]++\r\n      if(newPull.rarity === 5) newStats.Total5 += newPull.pity5\r\n      else if(newPull.rarity === 4) newStats.Total4 += newPull.pity4\r\n\r\n      // Push to display list\r\n      newList.push(newPull)\r\n    }\r\n    this.setState({\r\n      displayedPulls: newList,\r\n      statBlock: newStats,\r\n      aggregate: newAggregate\r\n    })\r\n  }\r\n\r\n  setEpitome(epitomeValue) {\r\n    this.setState({epitomeValue})\r\n  }\r\n\r\n  calcStatBlock () {\r\n    const toPercent = (n) => {\r\n      return `${Math.round(n * 10000)/100}%`\r\n    }\r\n\r\n    const block = this.state.statBlock\r\n    if(!this.state.bannerObject || this.state.bannerObject.total === 0) {\r\n      return <p>No stats to display</p>\r\n    }\r\n    else {\r\n      const total = this.state.bannerObject.total\r\n      return (\r\n        <div>\r\n          <p>Total Pulls: {total}</p>\r\n          <p style={{color: pullColors[5]}}>5* Rate: {toPercent(block[5]/total)}</p>\r\n          <p style={{color: pullColors[4]}}>4* Rate: {toPercent(block[4]/total)}</p>\r\n          <p style={{color: pullColors[3]}}>3* Rate: {toPercent(block[3]/total)}</p>\r\n          <p style={{color: pullColors[5]}}>Avg 5* Pity: {block[5] === 0 ? 0 : Math.round(block.Total5 / block[5] * 100)/100}</p>\r\n          <p style={{color: pullColors[4]}}>Avg 4* Pity: {block[4] === 0 ? 0 : Math.round(block.Total4 / block[4] * 100)/100}</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full\">\r\n        <h2>Genshin Gacha :(</h2>\r\n        <div>\r\n          <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={(e) => this.setState({dropdownOpen: !this.state.dropdownOpen})}>\r\n            <DropdownToggle caret>\r\n              {this.state.activeType ? (this.state.activeBanner ? this.state.activeBanner.fullName : \"Standard Banner\") : \"Select a Banner...\"}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem onClick={()=>this.resetBanner({activeType: 's', activeBanner: null})}>Standard Banner</DropdownItem>\r\n\r\n              <DropdownItem header>Character</DropdownItem>\r\n              {Object.keys(banners.character).map(bannerName => <DropdownItem key={bannerName} onClick={()=>this.resetBanner({activeType: 'c', activeBanner: banners.character[bannerName]})}>{bannerName}</DropdownItem>)}\r\n            \r\n              <DropdownItem header>Weapon</DropdownItem>\r\n              {Object.keys(banners.weapon).map(bannerName => <DropdownItem key={bannerName} onClick={()=>this.resetBanner({activeType: 'w', activeBanner: banners.weapon[bannerName]})}>{bannerName}</DropdownItem>)}\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n        </div>\r\n        <div>\r\n          {this.state.activeBanner ? <RSTable columns={['rarity', 'type', 'name']} data={this.state.activeBanner.promo5.concat(this.state.activeBanner.promo4)}/> : null}\r\n        </div>\r\n        <hr/>\r\n        <div className=\"main\">\r\n          <h3>Wishing</h3>\r\n          <div>\r\n            <Button className=\"controlBtn\" onClick={this.resetBanner.bind(this)}>Reset</Button>\r\n            <Button className=\"controlBtn\" onClick={() => this.pull(1)}>Wish</Button>\r\n            <Button className=\"controlBtn\" onClick={() => this.pull(10)}>Wish x10</Button>\r\n            <Button className=\"controlBtn\" onClick={() => this.pull(100)}>Wish x100</Button>\r\n            <Button className=\"controlBtn\" onClick={() => this.pull(1000)}>Wish x1000</Button>\r\n            <p>{(this.state.bannerObject ? `Active Banner: ${this.state.activeBanner ? this.state.activeBanner.fullName : 'Standard Banner'}. 5* Pity=${this.state.bannerObject.pity5} Guarantee=${this.state.bannerObject.guarantee5 } EP=${this.state.bannerObject.epCount || 0}` : 'No Active Banner')}</p>\r\n          </div>\r\n          <div>\r\n          <ButtonDropdown isOpen={this.state.epDropOpen} toggle={() => this.setState({epDropOpen: !this.state.epDropOpen})}>\r\n            <DropdownToggle caret disabled={!this.state.bannerObject || !(this.state.bannerObject instanceof WBanner)}>\r\n              Epitomized Path: {this.state.epitomeValue || \"N/A\"}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              {\r\n                (this.state.bannerObject && this.state.bannerObject instanceof WBanner) \r\n                ? this.state.bannerObject.bannerInfo.promo5.map(promoItem => <DropdownItem key={promoItem.name} onClick={()=> this.setEpitome(promoItem.name)}>{promoItem.name}</DropdownItem>) \r\n                : <DropdownItem>Placeholder</DropdownItem>\r\n              }\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n          </div>\r\n          <RSTable columns={['pity5', 'pity4', 'rarity', 'type', 'specType', 'name', 'rc']} data={this.state.displayedPulls} highlight={(pull, column) => colorPull(pull, column)}/>\r\n        </div>\r\n        <div className=\"aux\">\r\n          \r\n          <div>\r\n            <h3>Statistics</h3>\r\n            {this.calcStatBlock()}\r\n          </div>\r\n          <h3>Items Acquired</h3>\r\n          <AggregateTable data={this.state.aggregate} pullColors={pullColors}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <p>About</p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport './App.css';\r\n\r\nimport SideNav from './SideNav'\r\n\r\nimport Home from './pages/Home.js';\r\nimport About from './pages/About.js';\r\n\r\nconst sideNavItems = {\r\n  'Home': '/',\r\n//  'About': '/About'\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"AppPage\">\r\n      <div id=\"topbar\">\r\n        <a href=\"/\">Gacha Addiction Simulator</a>\r\n      </div>\r\n      <SideNav items={sideNavItems}/>\r\n      <Router id=\"content\">\r\n        <Route exact={true} path=\"/\" component={Home}/>\r\n        <Route exact={true} path=\"/About\" component={About}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}